<style>
    body{
        margin-top: 0px !important;
    }   
</style>

<%= javascript_include_tag 'itable', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'moment', 'data-turbolinks-track' => true %>
<script>
	var barcode_scan_url = "/person/barcode_scan";

	function checkBarcode(id,parent_type){
		jQuery("#touchscreenInput" + tstCurrentPage).focus();
		var value = __$("touchscreenInput" + tstCurrentPage).value;

		if (value.match(/\$$/) && value.length > 1){
			value = value.replace("$", '');
			__$("touchscreenInput" + tstCurrentPage).value = value;

			jQuery.ajax({
				url: barcode_scan_url + "?value=" + value,
				success: function(result){
					data = JSON.parse(result);
					jQuery('.inputFrameClass').css({
						"height" : "25px"
					});

					// if a table for results already exist then clear it and populate again
					iTable.reset();
					iTable.init(data[0], jQuery('.inputFrameClass').parent());
				},
				error: function(){
					__$("touchscreenInput" + tstCurrentPage).value = '';
					showMessage("Sorry, that person was not found. Click next to Register");
				}
			})
		}

		setTimeout(function(){checkBarcode(id)}, 500);
	}


</script>

<%= form_for @person, :url => '/person/create', :method => :post do |f| %>

    <%= f.hidden_field :_rev rescue "" %>

    <input type="hidden" name="person[place_of_birth]" value="<%= Location.where(location_id: SETTINGS['location_id']).first.name  %>"/>
    <input type="hidden" name="person[hospital_of_birth]" value="<%= Location.current.name %>" />

    <input type="hidden" id="person_birth_district" name="person[birth_district]" value="<%=Location.find(Location.current.parent_location).name%>">
    <input id="person_relationship" name="person[relationship]" value="normal" type="hidden"/>
    <input id="person_original_surname" type="hidden"/>
    <input id="person_duplicate" name="person[duplicate]" type="hidden" />
    <input id="person_is_exact_duplicate" type="hidden" name="person[is_exact_duplicate]" >

    <section name="Child Details">
        <sub id="child_details" name="Child Details">
            <%= text_field_tag("person[first_name]", nil,
                               :id => "child_first_name",
                               :helpText => "First name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed.",
                               :word_min_length => 2
                ) rescue '' %>

            <%= text_field_tag("person[last_name]", nil,
                               :id => "child_last_name",
                               :helpText => "Last name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed."
                ) %>

            <%= text_field_tag("person[birthdate]", nil,
                               :id => "child_birthdate",
                               :field_type => "date",
                               :allowFreeText => true,
                               :tt_onLoad => "__$('Unknown').style.display = 'none'",
                               :tt_onUnLoad => "checkBirthDate(__$('child_birthdate').value)",
                               :helpText => "Birthdate",
                               :validationRule => "^\\d{2}\\/[A-Z][a-z][a-z]\\/\\d{4}$",
                               :validationMessage => "Expecting a date format input.\nPlease use the provided controls.",
                               :absolute_min => Time.now.advance(:weeks => -6).strftime('%Y/%m/%d'),
                               :absolute_max => (Date.today + 1.day).strftime('%Y/%m/%d'),
                               :tt_onUnload => "__$('informant_report_date').setAttribute('absolute_min', __$('child_birthdate').value.trim());"
                ) %>

            <%= select_tag "person[gender]", options_for_select([ "Male", "Female" ], nil),
                           :id => "child_gender",
                           :helpText => "Gender"
            %>
        </sub>
        <sub id="child_birth_details" name="Child Birth Details">
            <%= text_field_tag("person[birth_weight]", nil,
                               :id => "person_birth_weight",
                               :placeholder => '0.000',
                               :tt_pageStyleClass => "NumbersWithoutUnknown nota",
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';
                               document.getElementById('char').style.display = 'none';
                               document.getElementById('qwerty').style.display = 'none';
                               document.getElementById('comma').style.display = 'none';
                               document.getElementById('percent').style.display = 'none';
                               document.getElementById('plus').style.display = 'none';
                               document.getElementById('minus').style.display = 'none';
                               document.getElementById('slash').style.display = 'none';
                               document.getElementById('star').style.display = 'none';
                               document.getElementById('date').style.display = 'none';",
                               :field_type => 'number',
                               :validationRule => '^\d+\.\d{3}$',
                               :validationMessage => "Expecting baby weight to have 3 decimal places.\nAppend zero(s) to the weight for you?",
                               :absolute_min => 0.7,
                               :absolute_max => 6,
                               :max => 4,
                               :min => 2.5,
                               :helpText => "Birth weight (in kilograms)",
                               :optional => true
                ) %>

            <%= select_tag "person[type_of_birth]", options_for_select([ "Single", "Twin", "Second Twin", "Triplet", "Second Triplet", "Third Triplet", "Other" ], nil),
                           :id => "person_type_of_birth",
                           :helpText => "Type of Birth",
                           :tstPageStyleClass => "NoKeyboard",
                           :tt_onLoad => "__$('keyboard').style.display = 'none';"
            %>

            <%= text_field_tag("person[other_type_of_birth]", nil,
                               :condition => "__$('person_type_of_birth').value.trim() == 'Other'",
                               :helpText => "Specify Other Type of Birth",
                               :optional => true
                ) %>


            <%= select_tag "person[parents_married_to_each_other]", options_for_select([ "Yes", "No" ], nil),
                           :id => "person_parents_married_to_each_other",
                           :helpText => "Are the Parents Married to each Other?"
            %>

            <%= select_tag "person[date_of_marriage]", options_for_select([ "Yes", "No" ], nil),
                           :id => "person_date_of_marriage",
                           :helpText => "Date of marriage",
                           :tt_onUnLoad => "checkBirthDate(__$('person_date_of_marriage').value)",
                           :field_type => "date",
                           :absolute_max => Date.today.strftime('%Y/%m/%d'),
                           :condition => "__$('person_parents_married_to_each_other').value == 'Yes'",
                           :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';"
            %>

            <%= select_tag "person[court_order_attached]", options_for_select([ "Yes", "No" ], nil),
                           :id => "person_court_order_attached",
                           :condition => "__$('person_parents_married_to_each_other').value == 'No'",
                           :helpText => "Court order attached?"
            %>

            <%= select_tag "person[parents_signed]", options_for_select([ "Yes", "No" ], nil),
                           :id => "person_parents_signed",
                           :condition => "__$('person_court_order_attached').value == 'No'",
                           :helpText => "Parents signed?"
            %>
        </sub>
    </section>

    <section name="Mother Details">
        <sub id="mother_details" name="Mother Details">
            <%= text_field_tag(:mother_barcode, nil,
                               :id => "mother_barcode",
                               :optional => "true",
                               :helpText => "Scan mother barcode",
                               :tstPageStyleClass => "NoKeyboard",
                               :tt_onLoad => "__$('keyboard').style.display = 'none'; checkBarcode('mother_barcode','mother')") %>

            <%= text_field_tag("person[mother][first_name]", nil,
                               :id => "mother_first_name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed.",
                               :helpText => "Mother first name"
                ) %>

            <%= text_field_tag("person[mother][last_name]", nil,
                               :id => "mother_last_name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed.",
                               :helpText => "Mother surname"
                ) %>

            <%= text_field_tag("person[mother][maiden_name]", nil,
                               :id => "mother_maiden_name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed.",
                               :optional => true,
                               :helpText => "Mother maiden name"
                ) %>

            <%= text_field_tag("person[mother][birthdate]", nil,
                               :id => "mother_birthdate",
                               :field_type => "date",
                               :tt_onUnLoad => "checkChildBirthDate(__$('mother_birthdate').value)",
                               :validationRule => "^\\d{2}\\/[A-Z][a-z][a-z]\\/\\d{4}$",
                               :validationMessage => "Expecting a date format input.\nPlease use the provided controls.",
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';",
                               :helpText => "Mother birthdate",
                               :optional => true
                ) %>

            <%= text_field_tag("person[mother][citizenship]", nil,
                               :id => "person_mother_citizenship",
                               :helpText => "Mother's Nationality",
                               :ajaxURL  => "/search_by_nationality?search="
                ) %>

            <%= text_field_tag("person[mother][residential_country]", nil,
                               :id => "person_mother_local_residential_country",
                               :helpText => "Mother's Country of Residence",
                               :ajaxURL  => "/search_by_country?search="
                ) %>

        </sub>

        <sub id="mother_home_address" name="Mother Home Address">
            <%= text_field_tag("person[mother][home_district]", nil,
                               :id => "person_mother_home_district",
                               :helpText => "Mother Home District",
                               :ajaxURL  => "/search_by_district?search=",
                               :tt_onUnload =>"__$('person_mother_home_ta').setAttribute('ajaxURL','/search_by_ta?district='+__$('touchscreenInput' + tstCurrentPage).value+'&search=')"
                ) %>

            <%= text_field_tag("person[mother][home_ta]", nil,
                               :id => "person_mother_home_ta",
                               :helpText => "Mother Home T/A or Area of Residence",
                               :tt_onUnload =>"__$('person_mother_home_village').setAttribute('ajaxURL','/search_by_village?ta='+__$('touchscreenInput' + tstCurrentPage).value+'&district='+__$('person_mother_home_district').value+'&search=')"
                ) %>

            <%= text_field_tag("person[mother][home_village]", nil,
                               :id => "person_mother_home_village",
                               :helpText => "Mother Home Village/Town",
                ) %>
        </sub>

        <sub id="mother_physical_address" name="Mother Physical Address">
            <%= text_field_tag("person[mother][current_district]", nil,
                               :id => "person_mother_current_district",
                               :helpText => "Mother Current District",
                               :ajaxURL  => "/search_by_district?search=",
                               :tt_onUnload =>"__$('person_mother_current_ta').setAttribute('ajaxURL','/search_by_ta?district='+__$('touchscreenInput' + tstCurrentPage).value+'&search=')"
                ) %>

            <%= text_field_tag("person[mother][current_ta]", nil,
                               :id => "person_mother_current_ta",
                               :helpText => "Mother Current T/A or Area of Residence",
                               :tt_onUnload =>"__$('person_mother_current_village').setAttribute('ajaxURL','/search_by_village?ta='+__$('touchscreenInput' + tstCurrentPage).value+'&district='+__$('person_mother_current_district').value+'&search=')"
                ) %>

            <%= text_field_tag("person[mother][current_village]", nil,
                               :id => "person_mother_current_village",
                               :helpText => "Mother Current Village/Town"
                ) %>
        </sub>

        <sub id="mother_birth_details" name="Mother Birth Details">
            <%= text_field_tag("gestation_at_birth", nil,
                               :id => "person_gestation_at_birth",
                               :helpText => "Gestation age at birth in weeks",
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';",
							   :tt_onUnLoad => "restrictGestationPeriod(__$('person_gestation_at_birth').value)",
                               :tt_pageStyleClass => "NumbersWithUnknown nota",
                               :field_type => 'number',
                               :optional => false
                ) %>

            <%= text_field_tag("number_of_prenatal_visits", nil,
                               :id => "person_number_of_prenatal_visits",
                               :min => '3',
                               :absolute_min => '0',
                               :max => '6',
                               :absolute_max => '12',
                               :helpText => 'Number of prenatal visits',
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';",
                               :tt_pageStyleClass => "NumbersWithUnknown nota",
                               :field_type => 'number',
                               :optional => true
                ) %>

            <%= text_field_tag("month_prenatal_care_started", nil,
                               :id => "person_month_prenatal_care_started",
                               :min => '3',
                               :absolute_min => '1',
                               :max => '6',
                               :absolute_max => '10',
                               :helpText => "Month of pregnancy prenatal care started",
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';",
                               :tt_pageStyleClass => "NumbersWithUnknown nota",
                               :field_type => 'number',
                               :optional => true
                ) %>

            <%= select_tag "person[mode_of_delivery]", options_for_select([ "SVD", "Vaccum Extraction", "Breech",
                                                                            "Forceps", "Caesarean Section" ], nil),
                           :id => "person_mode_of_delivery",
                           :helpText => "Mode of Delivery"
            %>

            <%= text_field_tag("number_of_children_born_alive_inclusive", nil,
                               :id => "person_number_of_children_born_alive_inclusive",
                               :helpText => "Number of children born to mother, including this child",
                               :tt_pageStyleClass => "NumbersWithUnknown nota",
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';",
                               :field_type => 'number'
                ) %>

            <%= text_field_tag("number_of_children_born_still_alive", nil,
                               :id => "person_number_of_children_born_still_alive",
                               :helpText => "Number of children born to mother, and still living",
                               :tt_pageStyleClass => "NumbersWithUnknown nota",
                               :field_type => 'number',
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';"
                ) %>

            <%= select_tag "person[level_of_education]", options_for_select([ "None", "Primary", "Secondary",
                                                                              "Higher Education" ], nil),
                           :id => "person_level_of_education",
                           :helpText => "Completed level of education"
            %>

        </sub>

    </section>

    <section name="Father Details">
        <sub id="father_details" name="Father Details">
            <%= text_field_tag(:father_barcode, nil,
                               :id => "father_barcode",
                               :optional => "true",
                               :helpText => "Scan father barcode",
                               :tstPageStyleClass => "NoKeyboard",
                               :tt_onLoad => "__$('keyboard').style.display = 'none'; checkBarcode('father_barcode',father)") %>

            <%= text_field_tag("person[father][first_name]", nil,
                               :id => "father_first_name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed.",
                               :helpText => "Father first name"
                ) %>

            <%= text_field_tag("person[father][last_name]", nil,
                               :id => "father_last_name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed.",
                               :helpText => "Father surname"
                ) %>

            <%= text_field_tag("person[father][birthdate]", nil,
                               :id => "father_birthdate",
                               :tt_onUnLoad => "checkChildBirthDate(__$('father_birthdate').value)",
                               :validationRule => "^\\d{2}\\/[A-Z][a-z][a-z]\\/\\d{4}$",
                               :validationMessage => "Expecting a date format input.\nPlease use the provided controls.",
                               :field_type => "date",
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';",
                               :helpText => "Father birthdate"
                ) %>

            <%= text_field_tag("person[father][citizenship]", nil,
                               :id => "person_father_citizenship",
                               :helpText => "Father's Nationality",
                               :ajaxURL  => "/search_by_nationality?search="
                ) %>

            <%= text_field_tag("person[father][residential_country]", nil,
                               :id => "person_father_local_residential_country",
                               :helpText => "Father's Country of Residence",
                               :ajaxURL  => "/search_by_country?search="
                ) %>

        </sub>

        <sub id="father_home_address" name="Father Home Address">
            <%= text_field_tag("person[father][home_district]", nil,
                               :id => "person_father_home_district",
                               :helpText => "Father Home District",
                               :ajaxURL  => "/search_by_district?search=",
                               :tt_onUnload =>"__$('person_father_home_ta').setAttribute('ajaxURL','/search_by_ta?district='+__$('touchscreenInput' + tstCurrentPage).value+'&search=')"
                ) %>

            <%= text_field_tag("person[father][home_ta]", nil,
                               :id => "person_father_home_ta",
                               :helpText => "Father Home T/A or Area of Residence",
                               :tt_onUnload =>"__$('person_father_home_village').setAttribute('ajaxURL','/search_by_village?ta='+__$('touchscreenInput' + tstCurrentPage).value+'&district='+__$('person_father_home_district').value+'&search=')"
                ) %>

            <%= text_field_tag("person[father][home_village]", nil,
                               :id => "person_father_home_village",
                               :helpText => "Father Home Village/Town"
                ) %>
        </sub>

        <sub id="father_physical_address" name="Father Physical Address">
            <%= text_field_tag("person[father][current_district]", nil,
                               :id => "person_father_current_district",
                               :helpText => "Father Current District",
                               :ajaxURL  => "/search_by_district?search=",
                               :tt_onUnload =>"__$('person_father_current_ta').setAttribute('ajaxURL','/search_by_ta?district='+__$('touchscreenInput' + tstCurrentPage).value+'&search=')"
                ) %>

            <%= text_field_tag("person[father][current_ta]", nil,
                               :id => "person_father_current_ta",
                               :helpText => "Father Current T/A or Area of Residence",
                               :tt_onUnload =>"__$('person_father_current_village').setAttribute('ajaxURL','/search_by_village?ta='+__$('touchscreenInput' + tstCurrentPage).value+'&district='+__$('person_father_current_district').value+'&search=')"


                ) %>

            <%= text_field_tag("person[father][current_village]", nil,
                               :id => "person_father_current_village",
                               :helpText => "Father Current Village/Town"
                ) %>
        </sub>
    </section>

    <section name="Informant Details">
        <sub id="informant_details" name="Informant Details">
            <%= select_tag "informant_same_as_mother", options_for_select([ "Yes", "No" ], nil),
                           :id => "informant_same_as_mother",
                           :tt_onUnload => "((__$('informant_same_as_mother').value.trim() === 'Yes')?loadInformantDetails('Mother'):'');",
                           :helpText => "Mother is informant?"
            %>
            <%= select_tag "informant_same_as_father", options_for_select([ "Yes", "No" ], nil),
                           :id => "informant_same_as_father",
                           :condition => "__$('informant_same_as_mother').value === 'No'",
                           :tt_onUnload => "(__$('informant_same_as_father').value.trim() === 'Yes'),loadInformantDetails('Father');",
                           :helpText => "Father is informant?"
            %>

            <%= text_field_tag("person[informant][first_name]", nil,
                               :id => "informant_first_name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed.",
                               :helpText => "Informant first name"
                ) %>

            <%= text_field_tag("person[informant][last_name]", nil,
                               :id => "informant_last_name",
                               :validationRule => "^[a-zA-Z\\s\\r\\n]+$",
                               :validationMessage => "Sorry! \n Use of special characters is not allowed.",
                               :helpText => "Informant surname"
                ) %>

            <%= text_field_tag("person[informant][birthdate]", nil,
                               :id => "informant_birthdate",
                               :tt_onUnLoad => "checkBirthDate(__$('informant_birthdate').value)",
                               :validationRule => "^\\d{2}\\/[A-Z][a-z][a-z]\\/\\d{4}$",
                               :validationMessage => "Expecting a date format input.\nPlease use the provided controls.",
                               :field_type => "date",
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';",
                               :helpText => "Informant birthdate"
                ) %>

            <%= text_field_tag("person[informant][citizenship]", nil,
                               :id => "person_informant_citizenship",
                               :helpText => "Informant's Nationality",
                               :ajaxURL  => "/search_by_nationality?search="
                ) %>

            <%= text_field_tag("person[informant][residential_country]", nil,
                               :id => "person_informant_local_residential_country",
                               :helpText => "Informant's Country of Residence",
                               :ajaxURL  => "/search_by_country?search="
                ) %>
        </sub>
        <sub id="informant_relationship_details" name="Informant Relationship Details">
            <%= select_tag "person[informant][relationship_to_person]", options_for_select([ 'Grandmother/Grandfather',
                                                                                             'Brother/Sister', 'Aunt/Uncle',
                                                                                             'Mother-in-law/Father-in-law',
                                                                                             'Sister-in-marriage/Brother-in-marriage',
                                                                                             'Other'], nil),
                           :id => "person_informant_relationship_to_person",
                           :helpText => "Informant relationship to person"
            %>
            <%= text_field_tag("person[informant][other_informant_relationship_to_person]", nil,
                               :id => "other_informant_relationship_to_person",
                               :condition => "__$('person_informant_relationship_to_person').value === 'Other'",
                               :helpText => "Specifiy informant relationship",
                ) %>
        </sub>
        <sub id="informant_home_address" name="Informant Home Address">
            <%= text_field_tag("person[informant][home_district]", nil,
                               :id => "person_informant_home_district",
                               :helpText => "Informant Home District",
                               :ajaxURL  => "/search_by_district?search=",
                               :tt_onUnload =>"__$('person_informant_home_ta').setAttribute('ajaxURL','/search_by_ta?district='+__$('touchscreenInput' + tstCurrentPage).value)"
                ) %>

            <%= text_field_tag("person[informant][home_ta]", nil,
                               :id => "person_informant_home_ta",
                               :helpText => "Informant Home T/A or Area of Residence",
                               :ajaxURL  => "/search_by_ta?search=",
                               :tt_onUnload =>"__$('person_informant_home_village').setAttribute('ajaxURL','/search_by_village?ta='+__$('touchscreenInput' + tstCurrentPage).value+'&district='+__$('person_informant_home_district').value+'&search=')"
                ) %>

            <%= text_field_tag("person[informant][home_village]", nil,
                               :id => "person_informant_home_village",
                               :helpText => "Informant Home Village/Town"
                ) %>
        </sub>

        <sub id="informant_physical_address" name="Informant Physical Address">
            <%= text_field_tag("person[informant][current_district]", nil,
                               :id => "person_informant_current_district",
                               :helpText => "Informant Current District",
                               :ajaxURL  => "/search_by_district?search=",
                               :tt_onUnload =>"__$('person_informant_current_ta').setAttribute('ajaxURL','/search_by_ta?district='+__$('touchscreenInput' + tstCurrentPage).value+'&search=')"
                ) %>

            <%= text_field_tag("person[informant][current_ta]", nil,
                               :id => "person_informant_current_ta",
                               :helpText => "Informant Current T/A or Area of Residence",
                               :tt_onUnload =>"__$('person_informant_current_village').setAttribute('ajaxURL','/search_by_village?ta='+__$('touchscreenInput' + tstCurrentPage).value+'&district='+__$('person_informant_current_district').value+'&search=')"
                ) %>

            <%= text_field_tag("person[informant][current_village]", nil,
                               :id => "person_informant_current_village",
                               :helpText => "Informant Current Village/Town"
                ) %>
        </sub>
        <sub id="informant_extra_details" name="Informant Extra Details">
            <%= text_field_tag("person[informant][phone_number]", nil,
                               :id => "person_informant_phone_number",
                               :helpText => "Please enter a valid phone number",
                               :tstPageStyleClass => "NumbersWithUnknown",
                               :field_type => 'number'
                ) %>
            <%= select_tag "person[form_signed]", options_for_select([ "Yes", "No" ], nil),
                           :id => "form_signed",
                           :helpText => "Has the form been signed by the Informant?"
            %>
            <%= text_field_tag("date_reported", nil,
                               :id => "informant_report_date",
                               :field_type => "date",
                               :validationRule => "^\\d{2}\\/[A-Z][a-z][a-z]\\/\\d{4}$",
                               :validationMessage => "Expecting a date format input.\nPlease use the provided controls.",
                               :tt_onLoad => "document.getElementById('Unknown').style.display = 'none';",
                               :helpText => "Date of Reporting"
                ) %>
            <%= select_tag "copy_mother_name", options_for_select([ "Yes", "No" ], nil),
                           :id => "person_copy_mother_name",
                           :helpText => "Replace person Surname with Mother Maiden Surname?"
            %>
        </sub>
    </section>
<% end %>

<script>
	function restrictGestationPeriod(gestation_period) {
		if(gestation_period < parseInt(30) || gestation_period > parseInt(42)) {
			showMessage('The value is out of Range: 30 - 42. Please enter a valid value.');
		    gotoPage(tstCurrentPage - 1);
		}
	}

    function checkBirthDate(passed_date) {
	return;
    	var today_date = moment().format('YYYY-MM-DD');
    	var check_date = moment(passed_date).format('YYYY-MM-DD');

    	if(check_date > today_date){
	  showMessage('Make sure the date is not greater than today.');
	  gotoPage(tstCurrentPage - 1);
        }
    }

    function checkChildBirthDate(passed_date) {
	    var child_birthdate = new Date(__$('child_birthdate').value);
	    var check_date_value = new Date(passed_date);
	    var year_difference = diff_years(child_birthdate, check_date_value);

    	if(parseInt(year_difference) < parseInt(11)){
		    showMessage('Parent should be atleast 11 years older than the child.');
		    gotoPage(tstCurrentPage - 1);
        }
    }

    function diff_years(dt2, dt1)
    {

	    var diff =(dt2.getTime() - dt1.getTime()) / 1000;
	    diff /= (60 * 60 * 24);
	    return Math.abs(Math.round(diff/365.25));

    }

	function reportingDate(){

		commence = new Date(8 + '/' + 1 + '/' + 2015).format("YYYY-mm-dd");

		original = new Date(6 + '/' + 15 + '/' + 2015).format("YYYY-mm-dd");

		var date_of_birth = new Date(__$("person_birthdate").value).format("YYYY-mm-dd");

		if (original < commence){
			commence = original;
		}
		if(original < date_of_birth){
			original = date_of_birth
		}
		return new Date(original).format();

	}

	function nationality(){

		if(__$('textForsame_address_with_mother').value.trim() == 'Yes' && __$('person_mother_citizenship').value.trim() == 'Malawian') {
			copyMothersResidence();
		}
		else if (__$('textForsame_address_with_mother').value.trim() == 'Yes' && __$('person_mother_citizenship').value.trim() != 'Malawian'){
			copyMothersForeignResidence()
		}else {
			deleteFathersResidence();
		}
	}
	function copyMothersForeignResidence(){

		if (__$("person_father_residential_country") && __$("textForperson_father_residential_country") && __$("person_mother_residential_country"))
		{
			__$("person_father_residential_country").value = __$("person_mother_residential_country").value;
			__$("textForperson_father_residential_country").value = __$("person_mother_residential_country").value;
		}

		if (__$("person_father_current_district") && __$("person_mother_foreigner_current_district")){
			__$("person_father_current_district").value = __$("person_mother_foreigner_current_district").value;

			__$("textForperson_father_current_district").value = __$("person_mother_foreigner_current_district").value;
		}

		if (__$("person_father_current_village") && __$("person_mother_foreigner_current_village")){
			__$("person_father_current_village").value = __$("person_mother_foreigner_current_village").value;

			__$("textForperson_father_current_village").value = __$("person_mother_foreigner_current_village").value;
		}

		if (__$("person_father_current_ta") && __$("person_mother_foreigner_current_ta") && __$("textForperson_father_current_ta")) {

			__$("person_father_current_ta").value = __$("person_mother_foreigner_current_ta").value;

			__$("textForperson_father_current_ta").value = __$("person_mother_foreigner_current_ta").value;


		}

		var section =  parseInt(__$("textForperson_father_current_district").getAttribute("section"));
		loadPage(section + 1);

		setTimeout(function() {
			var section = parseInt(__$("textForfather_home_address_same_as_physical").getAttribute("section"));
			var pos = parseInt(__$("textForfather_home_address_same_as_physical").getAttribute("pos"));
			navigateTo(pos, section, false);
		}, 25);

	}

	function copyMothersResidence() {

		if (__$("person_father_residential_country") && __$("textForperson_father_residential_country") && __$("person_mother_local_residential_country"))
		{
			__$("person_father_residential_country").value = __$("person_mother_local_residential_country").value;
			__$("textForperson_father_residential_country").value = __$("person_mother_local_residential_country").value;
		}

		if (__$("person_father_current_district") && __$("person_mother_current_district") && __$("textForperson_father_current_district")) {

			__$("person_father_current_district").value = __$("person_mother_current_district").value;

			__$("textForperson_father_current_district").value = __$("person_mother_current_district").value;

		}

		if (__$("person_father_current_village") && __$("person_mother_current_village") && __$("textForperson_father_current_village")) {

			__$("person_father_current_village").value = __$("person_mother_current_village").value;

			__$("textForperson_father_current_village").value = __$("person_mother_current_village").value;

		}

		if (__$("person_father_current_ta") && __$("person_mother_current_ta") && __$("textForperson_father_current_ta")) {

			__$("person_father_current_ta").value = __$("person_mother_current_ta").value;

			__$("textForperson_father_current_ta").value = __$("person_mother_current_ta").value;

			//  autoNavigate("textForperson_father_current_ta");

		}

		var section =  parseInt(__$("textForperson_father_current_district").getAttribute("section"));
		loadPage(section + 1);

		setTimeout(function() {
			var section = parseInt(__$("textForfather_home_address_same_as_physical").getAttribute("section"));
			var pos = parseInt(__$("textForfather_home_address_same_as_physical").getAttribute("pos"));
			navigateTo(pos, section, false);
		}, 25);
	}

	function deleteFathersResidence() {

		if (__$("person_father_residential_country") && __$("textForperson_father_residential_country"))
		{
			__$("person_father_residential_country").value = "";
			__$("textForperson_father_residential_country").value = "";
		}

		if (__$("person_father_current_district") && __$("textForperson_father_current_district")) {

			__$("person_father_current_district").value = "";

			__$("textForperson_father_current_district").value = "";

		}

		if (__$("person_father_current_ta") && __$("textForperson_father_current_ta")) {

			__$("person_father_current_ta").value = "";

			__$("textForperson_father_current_ta").value = "";

		}

		if (__$("person_father_current_village") && __$("textForperson_father_current_village")) {

			__$("person_father_current_village").value = "";

			__$("textForperson_father_current_village").value = "";

		}

	}

	function loadMothersDetails(){

		console.log("Invoking the loadMother")

		if (__$("person_mother_first_name") && __$("person_informant_first_name") && __$("textForperson_informant_first_name")) {

			__$("person_informant_first_name").value = __$("person_mother_first_name").value;

			__$("textForperson_informant_first_name").value = __$("person_mother_first_name").value;

			console.log("loadMothersDetails 1 " + __$("person_informant_first_name").value)
		}

		if (__$("person_mother_middle_name") && __$("person_informant_middle_name") && __$("textForperson_informant_middle_name")) {

			__$("person_informant_middle_name").value = __$("person_mother_middle_name").value;

			__$("textForperson_informant_middle_name").value = __$("person_mother_middle_name").value;

		}

		if (__$("person_mother_last_name") && __$("person_informant_last_name") && __$("textForperson_informant_last_name")) {

			__$("person_informant_last_name").value = __$("person_mother_last_name").value;

			__$("textForperson_informant_last_name").value = __$("person_mother_last_name").value;

		}

		if (__$("person_informant_relationship_to_person") && __$("textForperson_informant_relationship_to_person")) {

			__$("person_informant_relationship_to_person").value = "Mother";

			__$("textForperson_informant_relationship_to_person").value = "Mother";

		}

		if (__$("person_mother_current_district") && __$("person_informant_current_district")) {

			__$("person_informant_current_district").value = __$("person_mother_current_district").value;

		}

		if (__$("person_mother_current_ta") && __$("person_informant_current_ta")) {

			__$("person_informant_current_ta").value = __$("person_mother_current_ta").value;

		}

		if (__$("person_mother_current_village") && __$("person_informant_current_village")) {

			__$("person_informant_current_village").value = __$("person_mother_current_village").value;

		}

		if (__$("person_mother_id_number")) {

			__$("person_informant_id_number").value = __$("person_mother_id_number").value;

			__$("textForperson_informant_id_number").value = __$("person_mother_id_number").value;


		}

		var section =  parseInt(__$("textForperson_informant_id_number").getAttribute("section"));
		loadPage(section + 1);
		var section =  parseInt(__$("textForperson_informant_addressline1").getAttribute("section"));
		var pos = parseInt(__$("textForperson_informant_addressline1").getAttribute("pos"));
		navigateTo(pos, section, false);
	}

	function unloadInformantsDetails(){

		if (__$("person_informant_first_name") && __$("textForperson_informant_first_name")) {

			__$("person_informant_first_name").value = "";

			__$("textForperson_informant_first_name").value = "";

		}

		if (__$("person_informant_middle_name") && __$("textForperson_informant_middle_name")) {

			__$("person_informant_middle_name").value = "";

			__$("textForperson_informant_middle_name").value = "";

		}

		if (__$("person_informant_last_name") && __$("textForperson_informant_last_name")) {

			__$("person_informant_last_name").value = "";

			__$("textForperson_informant_last_name").value = "";

		}

		if (__$("person_informant_relationship_to_person") && __$("textForperson_informant_relationship_to_person")) {

			__$("person_informant_relationship_to_person").value = "";

			__$("textForperson_informant_relationship_to_person").value = "";

		}

		if (__$("person_informant_current_district") && __$("textForperson_informant_current_district")) {

			__$("person_informant_current_district").value = "";

			__$("textForperson_informant_current_district").value = "";

		}

		if (__$("person_informant_current_ta") && __$("textForperson_informant_current_ta")) {

			__$("person_informant_current_ta").value = "";

			__$("textForperson_informant_current_ta").value = "";

		}

		if (__$("person_informant_current_village") && __$("textForperson_informant_current_village")) {

			__$("person_informant_current_village").value = "";

			__$("textForperson_informant_current_village").value = "";

		}

		if(__$("person_informant_id_number") && __$("textForperson_informant_id_number")) {

			__$("person_informant_id_number").value = "";

			__$("textForperson_informant_id_number").value = "";
		}


	}

	function autoNavigate(id){

		if (id == "textForperson_mother_home_ta"){
			var pos = parseInt(__$(id).getAttribute("pos")) - 1;
		}else{
			var pos = parseInt(__$(id).getAttribute("pos")) + 1;
		}

		var section =  parseInt(__$(id).getAttribute("section"));

		gotoQuestion(pos, section);

	}


	function slowNavigate(id){

		cursorPos = parseInt(__$(id).getAttribute("pos")) - 1;

		section =  parseInt(__$(id).getAttribute("section"));

		navigateTo(cursorPos, currentPage);

		gotoNext();

		//gotoQuestion(pos, section);
	}

	function loadFathersDetails(){

		if (__$("person_father_first_name") && __$("person_informant_first_name") && __$("textForperson_informant_first_name")) {

			__$("person_informant_first_name").value = __$("person_father_first_name").value;

			if (__$("textForperson_informant_first_name"))
				__$("textForperson_informant_first_name").value = __$("person_father_first_name").value;

			//autoNavigate("textForperson_informant_first_name");

		}

		if (__$("person_father_middle_name") && __$("person_informant_middle_name") && __$("textForperson_informant_middle_name")) {

			__$("person_informant_middle_name").value = __$("person_father_middle_name").value;

			if (__$("textForperson_informant_middle_name"))
				__$("textForperson_informant_middle_name").value = __$("person_father_middle_name").value;

			//autoNavigate("textForperson_informant_middle_name");

		}

		if (__$("person_father_last_name") && __$("person_informant_last_name") && __$("textForperson_informant_last_name")) {

			__$("person_informant_last_name").value = __$("person_father_last_name").value;

			if (__$("textForperson_informant_last_name"))
				__$("textForperson_informant_last_name").value = __$("person_father_last_name").value;

			autoNavigate("textForperson_informant_last_name");

		}

		if (__$("person_informant_relationship_to_person") && __$("textForperson_informant_relationship_to_person")) {

			__$("person_informant_relationship_to_person").value = "Father";

			if (__$("textForperson_informant_relationship_to_person"))
				__$("textForperson_informant_relationship_to_person").value = "Father";

			//autoNavigate("textForperson_informant_relationship_to_person");

		}

		if (__$("person_father_current_district") && __$("person_informant_current_district")) {

			__$("person_informant_current_district").value = __$("person_father_current_district").value;

			//autoNavigate("textForperson_informant_current_district");

		}

		if (__$("person_father_current_ta") && __$("person_informant_current_ta")) {

			__$("person_informant_current_ta").value = __$("person_father_current_ta").value;

			//autoNavigate("textForperson_informant_current_ta");

		}

		if (__$("person_father_current_village") && __$("person_informant_current_village")) {

			__$("person_informant_current_village").value = __$("person_father_current_village").value;

			//autoNavigate("textForperson_informant_current_village");

		}

		if (__$("person_father_id_number")) {

			__$("person_informant_id_number").value = __$("person_father_id_number").value;

			if (__$("textForperson_informant_id_number"))
				__$("textForperson_informant_id_number").value = __$("person_father_id_number").value;

			//autoNavigate("textForperson_informant_id_number")


		}

		var section =  parseInt(__$("textForperson_informant_id_number").getAttribute("section"));
		loadPage(section + 1);
		var section =  parseInt(__$("textForperson_informant_addressline1").getAttribute("section"));
		var pos = parseInt(__$("textForperson_informant_addressline1").getAttribute("pos"));
		navigateTo(pos, section, false);

	}

	function updateFacilityDetails(){

		__$("person_place_of_birth").value = "This Hospital";

		__$("person_hospital_of_birth").value = "<%= Location.current.name %>";

		__$("person_birth_district").value = "<%=Location.find(Location.current.parent_location).name%>";
	}

	function loadHealthFacility() {

		// __$("textForperson_birth_district").setAttribute('disabled', 'disabled');

		// __$("person_birth_district").setAttribute('disabled', 'disabled');

		if(__$("person_place_of_birth").value == "This Hospital") {

			__$("textForperson_hospital_of_birth").value = "<%= Location.current.name %>";

			__$("person_hospital_of_birth").value = "<%= Location.current.name %>";

			__$("textForperson_birth_district").value = "<%=Location.find(Location.current.parent_location).name%>";

			__$("person_birth_district").value = "<%=Location.find(Location.current.parent_location).name%>";

			//autoNavigate("textForperson_hospital_of_birth");

			//autoNavigate("textForperson_birth_district");


		}else if(__$("person_place_of_birth").value == "Other" ) {

			__$("textForperson_hospital_of_birth").value = "";

			__$("person_hospital_of_birth").value = "";

			__$("textForperson_birth_district").value = "<%=Location.find(Location.current.parent_location).name%>";

			__$("person_birth_district").value = "<%=Location.find(Location.current.parent_location).name%>";

		}

	}

	function loadMothersAddress(){

		if (__$("person_mother_current_district") && __$("person_mother_home_district")) {

			__$("person_mother_home_district").value = __$("person_mother_current_district").value;

			if (__$("textForperson_mother_home_district"))
				__$("textForperson_mother_home_district").value = __$("person_mother_current_district").value;

			//slowNavigate("textForperson_mother_home_district");

		}

		if (__$("person_mother_current_ta") && __$("person_mother_home_ta")) {

			__$("person_mother_home_ta").value = __$("person_mother_current_ta").value;

			if (__$("textForperson_mother_home_ta"))
				__$("textForperson_mother_home_ta").value = __$("person_mother_current_ta").value;

			slowNavigate("textForperson_mother_home_ta");

		}

		if (__$("person_mother_current_village") && __$("person_mother_home_village")) {


			//__$("textForperson_mother_home_village").value = __$("person_mother_current_village").value;

			__$("person_mother_home_village").value = __$("person_mother_current_village").value;

			if (__$("textForperson_mother_home_village"))
				__$("textForperson_mother_home_village").value = __$("person_mother_current_village").value;

			slowNavigate("textForperson_mother_home_village");
		}


		var section =  parseInt(__$("textForperson_mother_home_district").getAttribute("section"));
		loadPage(section + 1);

		var section =  parseInt(__$("textForperson_gestation_at_birth").getAttribute("section"));
		var pos = parseInt(__$("textForperson_gestation_at_birth").getAttribute("pos"));
		navigateTo(pos, section, false);
	}

	function unloadMothersAddress(){

		if (__$("person_mother_home_district") && __$("textForperson_mother_home_district")) {

			__$("person_mother_home_district").value = "";

			__$("textForperson_mother_home_district").value = "";

		}

		if (__$("person_mother_home_ta") && __$("textForperson_mother_home_ta")) {

			__$("person_mother_home_ta").value = "";

			__$("textForperson_mother_home_ta").value = "";

		}

		if (__$("person_mother_home_village") && __$("textForperson_mother_home_village")) {

			__$("person_mother_home_village").value = "";

			__$("textForperson_mother_home_village").value = "";

		}


	}

	function loadForeignMothersAddress(){

		if (__$("person_mother_residential_country") && __$("person_mother_home_country")) {

			__$("person_mother_home_country").value = __$("person_mother_residential_country").value;

			__$("textForperson_mother_home_country").value = __$("person_mother_residential_country").value;

			//autoNavigate("textForperson_mother_home_country");

		}

		if (__$("person_mother_foreigner_current_district") && __$("person_mother_foreigner_home_district")) {

			__$("person_mother_foreigner_current_district").value = __$("person_mother_foreigner_current_district").value;

			__$("textForperson_mother_foreigner_home_district").value = __$("person_mother_foreigner_current_district").value;

			//autoNavigate("textForperson_mother_foregner_home_district");

		}

		if (__$("person_mother_foreigner_current_village") && __$("person_mother_foreigner_home_village")) {

			__$("person_mother_foreigner_home_village").value = __$("person_mother_foreigner_current_village").value;

			__$("textForperson_mother_foreigner_home_village").value = __$("person_mother_foreigner_current_village").value;

			//autoNavigate("textForperson_mother_foreigner_home_village");

		}

		if (__$("person_mother_foreigner_current_ta") && __$("person_mother_foreigner_home_ta")) {

			__$("person_mother_foreigner_home_ta").value = __$("person_mother_foreigner_current_ta").value;

			__$("textForperson_mother_foreigner_home_ta").value = __$("person_mother_foreigner_current_ta").value;

			//autoNavigate("textForperson_mother_foreigner_home_ta");

		}

		var section =  parseInt(__$("textForperson_mother_home_country").getAttribute("section"));
		loadPage(section + 1);

		var section =  parseInt(__$("textForperson_gestation_at_birth").getAttribute("section"));
		var pos = parseInt(__$("textForperson_gestation_at_birth").getAttribute("pos"));
		navigateTo(pos, section, false);
	}

	function unloadForeignMothersAddress(){

		if (__$("person_mother_home_country") && __$("textForperson_mother_home_country")) {

			__$("person_mother_home_country").value = "";

			__$("textForperson_mother_home_country").value = "";

		}


		if (__$("person_mother_foreigner_home_district") && __$("textForperson_mother_foreigner_home_district")) {

			__$("person_mother_foreigner_home_district").value = "";

			__$("textForperson_mother_foreigner_home_district").value = "";

		}

		if (__$("person_mother_foreigner_home_ta") && __$("textForperson_mother_foreigner_home_ta")) {

			__$("person_mother_foreigner_home_ta").value = "";

			__$("textForperson_mother_foreigner_home_ta").value = "";

		}

		if (__$("person_mother_foreigner_home_village") && __$("textForperson_mother_foreigner_home_village")) {

			__$("person_mother_foreigner_home_village").value = "";

			__$("textForperson_mother_foreigner_home_village").value = "";

		}

	}


	function loadFathersAddress(){

		if (__$("person_father_current_district") && __$("person_father_home_district")  && __$("textForperson_father_home_district")) {

			__$("person_father_home_district").value = __$("person_father_current_district").value;

			__$("textForperson_father_home_district").value = __$("person_father_current_district").value;

			//autoNavigate("textForperson_father_home_district");

		}

		if (__$("person_father_current_ta") && __$("person_father_home_ta") && __$("textForperson_father_home_ta")) {

			__$("person_father_home_ta").value = __$("person_father_current_ta").value;

			__$("textForperson_father_home_ta").value = __$("person_father_current_ta").value;

			//  autoNavigate("textForperson_father_home_ta");
		}

		if (__$("person_father_current_village") && __$("person_father_home_village") && __$("textForperson_father_home_village")) {

			__$("person_father_home_village").value = __$("person_father_current_village").value;

			__$("textForperson_father_home_village").value = __$("person_father_current_village").value;

			//autoNavigate("textForperson_father_home_village");
		}

		var section =  parseInt(__$("textForperson_father_home_district").getAttribute("section"));
		loadPage(section + 1);

		setTimeout(function() {
			var section = parseInt(__$("textForinformant_same_as_mother").getAttribute("section"));

			navigateTo(0, section, false);
		}, 25);

	}

	function unloadFathersAddress(){

		if (__$("person_father_home_district") && __$("textForperson_father_home_district")) {

			__$("person_father_home_district").value = "";

			__$("textForperson_father_home_district").value = "";

		}

		if (__$("person_father_home_ta") && __$("textForperson_father_home_ta")) {

			__$("person_father_home_ta").value = "";

			__$("textForperson_father_home_ta").value = "";

		}

		if (__$("person_father_home_village") && __$("textForperson_father_home_village")) {

			__$("person_father_home_village").value = "";

			if (__$("textForperson_father_home_village"))
				__$("textForperson_father_home_village").value = "";

		}


	}

	function setpersonName() {

		__$('person_copy_mother_name').setAttribute('condition', "__$('person_parents_married_to_each_other').value.trim() == 'No' && __$('person_court_order_attached').value.trim() == 'No' && __$('person_parents_signed').value.trim() == 'No' &&  __$('person_mother_last_name').value.trim().toLowerCase() != __$('person_last_name').value.trim().toLowerCase()");
	}

	function appendValue(id){
		setTimeout("checkChanges('" + id + "')", 1000);
	}

	function possibleChildren(obj, tag){

		// This function assigns limits to a target element based on type of birth
		var min = 1

		if (obj.value.match(/Twin/i)){

			min = 2;

		}else if (obj.value.match(/Triplet/i)){

			min = 3;

		}else if (obj.value.match(/Other/i)){

			min = 4;

		}

		tag.setAttribute("absolute_min", min);

	}

	function validateDate(obj, tag, min, max, absoluteMin, absoluteMax){

		// This function assigns limits to a target element based on parameters

		ele = obj.value
		ele = ele.split('/');

		if (obj.value.match(/\W?/i)) {
			if (ele[1] == '?') {
				ele[0] = "1";
				ele[1] = "07";
			}
			else if (ele[0] == '?') {
				ele[1] = parseInt(monthNames[ele[1]]) + 1;
				ele[1] = (ele[1] < 10 ? "0" + ele[1] : ele[1])
				ele[0] = "15"
			}
		}
		else {
			ele[1] = parseInt(monthNames[ele[1]]);
			ele[1] = ele[1] + 1

			if (ele[1] < 10){
				ele[1] = "0" + ele[1];
			}
		}

		current = new Date(ele[1] + "/" + ele[0] + "/" + ele[2]);

		yr1 = current.getFullYear() - min;
		yr2 = current.getFullYear() - max;
		yr3 = current.getFullYear() - absoluteMax;
		yr4 = current.getFullYear() - absoluteMin;

		min =  yr1 + '/' + ele[1] + '/' + ele[0];
		max = yr2 + '/' + ele[1] + '/' + ele[0];
		absoluteMax =  yr3 + '/' + ele[1] + '/' + ele[0];

		if (parseInt(absoluteMin) > 0) {
			absoluteMin =  yr4 + '/' + ele[1] + '/' + ele[0];
		}else{
			absoluteMin = "";
		}


		tag.setAttribute("min", min);
		tag.setAttribute("max", max);
		tag.setAttribute("absolute_max", absoluteMax);
		tag.setAttribute("absolute_min", absoluteMin);

	}

	function copyMothersName(){
		__$("person_original_surname").value =  __$("person_last_name").value ;
		__$("person_last_name").value =  __$("person_mother_last_name").value ;
	}

	function removeMothersName(){
		if (__$("person_original_surname")) {
			__$("person_last_name").value = __$("person_original_surname").value;

		}
	}

	function setChildName() {
		__$('person_copy_mother_name').setAttribute('condition', "__$('person_parents_married_to_each_other').value.trim() == 'No' && __$('person_court_order_attached').value.trim() == 'No' && __$('person_parents_signed').value.trim() == 'No' &&  __$('person_mother_last_name').value.trim().toLowerCase() != __$('person_last_name').value.trim().toLowerCase()");
	}

	//init();

	summaryHash = {
		"Child Name" : ["person_first_name","person_middle_name","person_last_name"],
		"Child Gender" : ["person_gender"],
		"Child Date of Birth" : ["person_birthdate"],
		"Place of Birth"    : ["person_place_of_birth"],
		"Location of Birth" : ["person_hospital_of_birth", "person_birth_district"],
		"Mother " : ["person_mother_first_name","person_mother_middle_name", "person_mother_last_name"],
		"Mother Nationality" : ["person_mother_citizenship"],
		"Father" : ["person_father_first_name", "person_father_middle_name", "person_father_last_name"],
		"Father Nationality" : ["person_father_citizenship"],
		"Parents Married to each Other?": ['person_parents_married_to_each_other'],
		"Court order attached": ['person_court_order_attached'],
		"Parents signed?" : ["person_parents_signed"],
		"Form Signed by Informant?" : ["form_signed"],
		"Delayed Registration" : ['registration_type']
	};

	showMessage();

	function clearRelated(){
		if (__$('del')){
			__$('del').onmousedown = function () {

				if (target) {

					if ("N/A" == target.value.trim()) {

						target.value = "";

					} else {

						target.value = target.value.trim().substring(0, (target.value.trim().length - 1));

					}

					if(target.getAttribute("target") == "person_mother_current_district"){

						__$("person_mother_current_ta").value = "";
						__$("person_mother_current_village").value = "";

						__$("textForperson_mother_current_ta").value = "";
						__$("textForperson_mother_current_village").value = "";

					}else if(target.getAttribute("target") == "person_mother_current_ta"){

						__$("person_mother_current_village").value = "";

						__$("textForperson_mother_current_village").value = "";

					}else if(target.getAttribute("target") == "person_mother_home_district"){

						__$("person_mother_home_ta").value = "";
						__$("person_mother_home_village").value = "";

						__$("textForperson_mother_home_ta").value = "";
						__$("textForperson_mother_home_village").value = "";

					}else if(target.getAttribute("target") == "person_mother_home_ta"){

						__$("person_mother_home_village").value = "";

						__$("textForperson_mother_home_village").value = "";

					}


					if(target.getAttribute("target")){

						if(__$(target.getAttribute("target"))){

							__$(target.getAttribute("target")).value = target.value;

						}

					}

				}

			}
		}

	}

	function  showMessage() {

		<% if @person.errors.any?
          errors = []
          errors << "<p>" + pluralize(@child.errors.count, "error") + " occured while saving this record:</p>"
           @child.errors.full_messages.each do |message|
             errors << "<li>" + message + "</li>"
          end %>

		showMsg('<%= errors.join.html_safe %>', true);

		<% end %>

	}

	function checkWeddingDate( obj,parent)
	{
		if (__$('person_parents_married_to_each_other').value.toString().trim().toUpperCase() == "YES")
		{

			var marriageDate = handleDate(__$('person_date_of_marriage').value.toString().trim())

			var dob = handleDate(obj.value.toString().trim())

			if ((marriageDate - dob) < 0) {
				showMsg("The date of marriage for " + parent + " is date of birth. Please enter a valid date.");
				__$("textForperson_date_of_marriage").focus()
			}

			if (((marriageDate - dob) / (365 * 24 * 60 * 60 * 1000)) <= 10){

				showMsg("The age at marriage of " + parent + " is less than 10 years. Please verify date of marriage and birth.");
			}
		}
	}
	function handleDate(date){

		ele = date.split('/');

		if (date.match(/\W?/i)) {
			if (ele[1] == '?') {
				ele[0] = "1";
				ele[1] = "07";
			}
			else if (ele[0] == '?') {
				ele[1] = parseInt(monthNames[ele[1]]) + 1;
				ele[1] = (ele[1] < 10 ? "0" + ele[1] : ele[1])
				ele[0] = "15"
			}
		}
		else {
			ele[1] = parseInt(monthNames[ele[1]]);
			ele[1] = ele[1] + 1

			if (ele[1] < 10){
				ele[1] = "0" + ele[1];
			}
		}
		return new Date(ele[1] + "/" + ele[0] + "/" + ele[2]);

	}

	function updateRegistrationType()
	{
		var person_dob = handleDate(__$('person_birthdate').value);

		if (((Date.parse(__$('person_date_reported').value) - person_dob)/ (1000 * 60 * 60 * 24)) > 42)
		{
			__$('registration_type').value = 'Yes'
		}
		else
		{
			__$('registration_type').value = 'No'
		}
	}

    /*summaryHash = {};

     function loadFields(){

     var fields = document.getElementsByClassName("input_cell");

     for(var i = 0; i < fields.length; i++){

     summaryHash[fields[i].id] = [fields[i].id];
     summaryHash[fields[i].id] = [fields[i].id];

     }

     }

     loadFields();*/

</script>
